from braille_to_eng_funtion import *

def join_text(text):
    t = []
    for T,N in text:
        t.append(T)
    return t
#
# def add_output(end_char, text):
#     output = join_text(text) + end_char
#     text = []
#     return output,text

# input = [[1, 0, 1, 0, 0, 1],[0, 0, 1, 1, 0, 0],[1, 1, 0, 0, 0, 0],[1, 1, 1, 1, 0, 1],[0, 1, 0, 1, 1, 1],[1, 0, 0, 0, 0, 0],[1, 0, 1, 0, 0, 0],[1, 1, 0, 0, 0, 0],[0, 1, 0, 1, 0, 0],[0, 1, 0, 1, 0, 0],[1, 1, 0, 0, 1, 0]]
# input = [[0,0,0,0,0,1],[1,1,0,1,1,0],[1,0,0,1,0,0],[0,1,1,1,0,1]]
# input = [[1,1,0,1,1,0],[1,0,0,1,0,0],[0,1,1,1,0,1]] #new

# input = [[0, 0, 0, 0, 0, 1],[1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1]]
#
# input = [[0, 0, 0, 0, 0, 1],[1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1],[0, 0, 0, 0, 0, 1],[1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1]]

# input = [[0, 0, 0, 0, 0, 1],[0, 0, 0, 0, 0, 1],[1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1]," ",[0, 0, 0, 0, 0, 1],[0, 0, 0, 0, 0, 1],[1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1]]
# input = [[0, 0, 0, 0, 0, 1],[1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1],[0, 0, 0, 0, 0, 1],[0, 0, 0, 0, 0, 1],[1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1]]
# input = [[0, 0, 0, 0, 0, 1],[0, 0, 0, 0, 0, 1],[1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1]]

# input=[[0, 0, 0, 0, 0, 1],[0, 0, 0, 0, 0, 1],[1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0,0,0,0,0,1],[0, 1, 1, 1, 0, 1],[1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0]]
# input = [[1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1]," ",
#          [0, 0, 0, 0, 0, 1],[0, 0, 0, 0, 0, 1],[0, 0, 0, 0, 0, 1],
#          [1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1]," ",
#          [1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1]," ",
#          [1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1],
#          [0,0,0,0,0,1],[0,0,0,0,1,0],[0, 1, 0, 1, 1, 1],[1, 1, 0, 1, 0, 0],
#          [1, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1]]

# input = [[0, 0, 0, 0, 0, 1],[0, 0, 0, 0, 0, 1],[1, 0, 0, 1, 1, 1],[1, 1, 0, 0, 1, 1],[1, 1, 0, 0, 0, 0],[0, 1, 0, 1, 1, 1],[1, 1, 0, 1, 0, 0],[0, 0, 0, 0, 0, 1],[1, 0, 0, 0, 0, 0]]



input = [[1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1]," ",
         [0, 0, 0, 0, 0, 1],[0, 0, 0, 0, 0, 1],[0, 0, 0, 0, 0, 1],
         [1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1]," ",
         [1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1]," ",
         [1, 1, 0, 1, 1, 0],[1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1],
         [0,0,1,1,0,1],[0, 1, 0, 1, 1, 1],[1, 1, 0, 1, 0, 0],
         [1, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1]]
def EbrailleRun():
    cnt = 0
    output = []
    text = []

    while True:


        if cnt == len(input):  # while문 종료 조건
            output += join_text(text)
            break

        if input[cnt] == " ":  # 띄어쓰기 0,1,2,3
            output += join_text(text)
            output += " "
            text = []
            cnt += 1
            continue

        if input[cnt] == "\n":  # 엔터 시 text에 있는 내용을 output에 저장
            continue

        cnt, tmp, text = check_upper(cnt, input, text)
        if tmp == True: continue

        cnt, tmp, text = check_punctuation_marks(cnt, input, text)
        if tmp == True: continue

        # 숫자
        cnt, tmp, text = check_num(cnt, input, text)
        if tmp == True: continue

        cnt, tmp, text = check_lower(cnt, input, text)
        if tmp == True: continue

    s = "".join(output)
    return s
